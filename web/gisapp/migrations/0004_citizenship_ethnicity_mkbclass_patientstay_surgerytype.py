# Generated by Django 2.2.13 on 2022-04-21 16:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('gisapp', '0003_auto_20220421_2044'),
    ]

    operations = [
        migrations.CreateModel(
            name='Citizenship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Гражданство',
                'verbose_name_plural': 'Гражданства',
            },
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Этнос',
                'verbose_name_plural': 'Этносы',
            },
        ),
        migrations.CreateModel(
            name='MKBClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
                ('code', models.CharField(max_length=9, verbose_name='Код')),
                ('level', models.PositiveSmallIntegerField(verbose_name='Уровень МКБ')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='gisapp.MKBClass')),
            ],
            options={
                'verbose_name': 'Класс МКБ',
                'verbose_name_plural': 'Классы МКБ',
                'unique_together': {('name', 'code')},
            },
        ),
        migrations.CreateModel(
            name='SurgeryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Код')),
            ],
            options={
                'verbose_name': 'Операция',
                'verbose_name_plural': 'Операции',
            },
        ),
        migrations.CreateModel(
            name='PatientStay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rpnID', models.PositiveIntegerField(verbose_name='rpnID')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='Дата смерти')),
                ('age', models.PositiveSmallIntegerField(verbose_name='Возраст')),
                ('sex', models.PositiveSmallIntegerField(choices=[(0, 'Мужской'), (1, 'Женский')], verbose_name='Пол')),
                ('countryside', models.PositiveSmallIntegerField(choices=[(0, 'Город'), (1, 'Село')], verbose_name='Село/Город')),
                ('surgery_date', models.DateField(blank=True, null=True, verbose_name='Дата операции')),
                ('admission_date', models.DateField(verbose_name='Дата поступления')),
                ('discharge_date', models.DateField(verbose_name='Дата выписки')),
                ('days_spent', models.PositiveSmallIntegerField(verbose_name='Проведено койко-дней')),
                ('amount_to_pay', models.FloatField(verbose_name='Предъявленная сумма к оплате')),
                ('is_planned', models.BooleanField(verbose_name='Планово')),
                ('is_urgent', models.BooleanField(verbose_name='Экстренно')),
                ('benefits', models.CharField(max_length=30, verbose_name='Льгота')),
                ('stay_result', models.PositiveSmallIntegerField(choices=[(0, 'Выписан'), (1, 'Переведен'), (2, 'Самовольный уход'), (3, 'Умер')], verbose_name='Исход пребывания')),
                ('treatment_result', models.PositiveSmallIntegerField(choices=[(0, 'Выздоровление'), (1, 'Смерть'), (2, 'Без перемен'), (3, 'Ухудшение'), (4, 'Улучшение')], verbose_name='Исход лечения')),
                ('citizenship', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gisapp.Citizenship', verbose_name='Гражданство')),
                ('ethnicity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gisapp.Ethnicity', verbose_name='Этнос')),
                ('from_hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='from_hospital', to='gisapp.Hospital', verbose_name='Больница откуда направили')),
                ('funding_source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gisapp.FundingSource', verbose_name='Источник финансирования')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gisapp.Hospital', verbose_name='Больница')),
                ('mkb', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gisapp.MKBClass', verbose_name='Класс МКБ')),
                ('mkb_complication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='mbk_complication', to='gisapp.MKBClass', verbose_name='Осложнение - Класс МКБ')),
                ('surgery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='gisapp.SurgeryType', verbose_name='Тип операции')),
            ],
        ),
    ]
